name: Semantic Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install Dependencies
        run: npm install
      - name: Run semantic-release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Get version from semantic-release
        id: get_version
        shell: pwsh
        run: |
          try {
            $version = git describe --tags --abbrev=0
          } catch {
            Write-Host "No tags found. Defaulting to 0.0.0"
            $version = "0.0.0"
          }
          echo "$env:VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $version"

      - name: ⬇️ Install Rainmeter and locate SkinInstaller.exe
        shell: pwsh
        run: |
          $installerUrl = "https://github.com/rainmeter/rainmeter/releases/download/v4.5.18.3727/Rainmeter-4.5.18.exe"
          $installerPath = "$env:RUNNER_TEMP\RainmeterSetup.exe"

          Invoke-WebRequest -Uri $installerUrl -OutFile $installerPath
          Start-Process -Wait -FilePath $installerPath -ArgumentList "/S"

          # Search typical paths for SkinInstaller.exe
          $candidates = @(
            "C:\Program Files\Rainmeter\SkinInstaller.exe",
            "C:\Program Files (x86)\Rainmeter\SkinInstaller.exe"
          )

          foreach ($path in $candidates) {
            if (Test-Path $path) {
              Copy-Item $path .\
              Write-Host "✔ Found and copied SkinInstaller.exe from $path"
              break
            }
          }

          if (-not (Test-Path ".\SkinInstaller.exe")) {
            Write-Error "❌ SkinInstaller.exe not found in known install paths."
            exit 1
          }
      - name: Create RMSKIN package
        shell: pwsh
        run: |
          Set-Location $env:GITHUB_WORKSPACE
          echo cwd
          mkdir RMSKIN
          Copy-Item  -Path "4000 English Words" -Destination "RMSKIN" -Recurse
          ./SkinInstaller.exe RMSKIN/"4000 English Words" /S
          Rename-Item "RMSKIN\4000 English Words.rmskin" "4000-English-Words-$env:VERSION.rmskin"

      - name: Upload .rmskin to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: 4000-English-Words-$env:VERSION.rmskin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: List files for debugging
        run: dir /s /b

